import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { ChakraProvider, extendTheme, Spinner, Box } from '@chakra-ui/react';
import HomePage from './pages/HomePage.jsx';
import AuthPage from './pages/AuthPage.jsx';
import PageLayout from './Layout/PageLayout.jsx';
import ProfilePage from './pages/ProfilePage.jsx';
import { useAuthState } from 'react-firebase-hooks/auth';
import { auth } from './firebase/firebase.js';
import ErrorBoundary from './components/ErrorBoundary';

const theme = extendTheme({
  config: {
    initialColorMode: 'dark',
    useSystemColorMode: false,
  },
  styles: {
    global: {
      body: {
        bg: 'gray.900',
        color: 'white',
      },
    },
  },
  components: {
    Button: {
      baseStyle: {
        fontSize: { base: '12px', md: '14px' },
        borderRadius: 'md',
      },
    },
    Input: {
      baseStyle: {
        field: {
          fontSize: { base: '12px', md: '14px' },
          bg: 'gray.700',
          color: 'white',
          _placeholder: { color: 'gray.400' },
        },
      },
    },
  },
  breakpoints: {
    base: '0px',
    sm: '320px',
    md: '480px',
    lg: '768px',
  },
});

function App() {
  const [authUser, loading, error] = useAuthState(auth);

  if (loading) {
    return (
      <Box minH="100vh" display="flex" justifyContent="center" alignItems="center">
        <Spinner size="xl" color="blue.500" />
      </Box>
    );
  }

  if (error) {
    return (
      <Box minH="100vh" display="flex" justifyContent="center" alignItems="center">
        <Text color="red.500">Firebase HatasÄ±: {error.message}</Text>
      </Box>
    );
  }

  return (
    <ChakraProvider theme={theme}>
      <Router>
        <ErrorBoundary>
          <PageLayout>
            <Routes>
              <Route
                path="/"
                element={authUser ? <HomePage /> : <Navigate to="/auth" />}
              />
              <Route
                path="/auth"
                element={!authUser ? <AuthPage /> : <Navigate to="/" />}
              />
              <Route path="/:username" element={<ProfilePage />} />
            </Routes>
          </PageLayout>
        </ErrorBoundary>
      </Router>
    </ChakraProvider>
  );
}

export default App;