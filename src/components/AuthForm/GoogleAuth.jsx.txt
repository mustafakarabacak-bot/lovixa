import { Flex, Image, Text } from '@chakra-ui/react';
import { auth, firestore } from '../../firebase/firebase';
import { useSignInWithGoogle } from 'react-firebase-hooks/auth';
import useShowToast from '../hooks/useShowToast';
import useAuthStore from '../../store/authStore';
import { doc, getDoc, setDoc } from 'firebase/firestore';
import { useNavigate } from 'react-router-dom';

const GoogleAuth = ({ prefix }) => {
  const [signInWithGoogle, , , error] = useSignInWithGoogle(auth);
  const showToast = useShowToast();
  const loginUser = useAuthStore((state) => state.login);
  const navigate = useNavigate();

  const handleGoogleAuth = async () => {
    try {
      const newUser = await signInWithGoogle();
      if (!newUser && error) {
        showToast('Hata', error.message, 'error');
        return;
      }

      const userRef = doc(firestore, 'users', newUser.user.uid);
      const userSnap = await getDoc(userRef);

      if (userSnap.exists()) {
        const userDoc = userSnap.data();
        localStorage.setItem('user-info', JSON.stringify(userDoc));
        loginUser(userDoc);
        navigate('/');
      } else {
        const userDoc = {
          uid: newUser.user.uid,
          email: newUser.user.email,
          username: newUser.user.email.split('@')[0].toLowerCase(),
          fullName: newUser.user.displayName || 'Kullanıcı',
          bio: 'Merhaba, Lovixa\'da yeniyim!',
          profilePicURL: newUser.user.photoURL || 'https://via.placeholder.com/150',
          followers: [],
          following: [],
          posts: [],
          createdAt: Date.now(),
          location: { latitude: 0, longitude: 0 },
        };
        await setDoc(userRef, userDoc);
        localStorage.setItem('user-info', JSON.stringify(userDoc));
        loginUser(userDoc);
        navigate('/');
      }
    } catch (err) {
      showToast('Hata', err.message, 'error');
    }
  };

  return (
    <Flex
      alignItems="center"
      justifyContent="center"
      cursor="pointer"
      onClick={handleGoogleAuth}
      p={2}
      bg="gray.700"
      borderRadius="md"
      w="full"
    >
      <Image src="/google.png" w={5} alt="Google logo" />
      <Text mx={2} color="blue.300" fontSize="sm">
        {prefix}
      </Text>
    </Flex>
  );
};

export default GoogleAuth;