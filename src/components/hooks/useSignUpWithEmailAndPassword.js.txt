import { useState } from 'react';
import { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';
import { doc, setDoc } from 'firebase/firestore';
import { auth, firestore } from '../../firebase/firebase';
import useAuthStore from '../../store/authStore';
import { useNavigate } from 'react-router-dom';

const useSignUpWithEmailAndPassword = () => {
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const loginUser = useAuthStore((state) => state.login);
  const navigate = useNavigate();

  const signup = async (inputs) => {
    setLoading(true);
    setError(null);

    try {
      if (!inputs.email || !inputs.password || !inputs.username || !inputs.fullName) {
        throw new Error('TÃ¼m alanlar zorunludur.');
      }

      const userCredential = await createUserWithEmailAndPassword(auth, inputs.email, inputs.password);
      const user = userCredential.user;

      await updateProfile(user, { displayName: inputs.fullName });

      const userDoc = {
        uid: user.uid,
        email: user.email,
        username: inputs.username.toLowerCase(),
        fullName: inputs.fullName,
        bio: 'Merhaba, Lovixa\'da yeniyim!',
        profilePicURL: user.photoURL || 'https://via.placeholder.com/150',
        followers: [],
        following: [],
        posts: [],
        createdAt: Date.now(),
        location: { latitude: 0, longitude: 0 },
      };

      await setDoc(doc(firestore, 'users', user.uid), userDoc);
      localStorage.setItem('user-info', JSON.stringify(userDoc));
      loginUser(userDoc);
      navigate('/');
    } catch (err) {
      setError({ message: err.message });
    } finally {
      setLoading(false);
    }
  };

  return { loading, error, signup };
};

export default useSignUpWithEmailAndPassword;